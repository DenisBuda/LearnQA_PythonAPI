# generated by datamodel-codegen:
#   filename:  json_schema_for_first_slider.json
#   timestamp: 2022-04-18T12:04:33+00:00

from __future__ import annotations

from typing import Any, List, Optional, Union

from pydantic import BaseModel

class Genre(BaseModel):
    id: int
    label: str
    alias: str


class Genre1(BaseModel):
    id: int
    label: str
    alias: str


class Project(BaseModel):
    id: int
    hubId: str
    ratingKinopoisk: Any
    ratingIMDB: Any
    genres: List[Union[Genre, Genre1]]
    releaseDate: str
    subscriptionType: str
    category: str
    canonicalUrl: str


class Badge(BaseModel):
    text: str
    color: Any


class Adfox(BaseModel):
    pixelClick: Any
    pixelImpression: Any


class Slide(BaseModel):
    id: int
    title: str
    description: str
    link: Any
    project: Project
    badge: Badge
    minAge: int
    campaignName: Any
    adfox: Adfox
    image: str


class Genre2(BaseModel):
    id: int
    label: str
    alias: str


class Genre3(BaseModel):
    id: int
    label: str
    alias: str


class Project1(BaseModel):
    id: int
    hubId: str
    ratingKinopoisk: Any
    ratingIMDB: Any
    genres: List[Union[Genre2, Genre3]]
    releaseDate: str
    subscriptionType: str
    category: str
    canonicalUrl: str


class Adfox1(BaseModel):
    pixelClick: Any
    pixelImpression: Any


class Slide1(BaseModel):
    id: int
    title: str
    description: str
    link: Any
    project: Project1
    badge: Any
    minAge: int
    campaignName: str
    adfox: Adfox1
    image: str


class Genre4(BaseModel):
    id: int
    label: str
    alias: str


class Genre5(BaseModel):
    id: int
    label: str
    alias: str


class Genre6(BaseModel):
    id: int
    label: str
    alias: str


class Genre7(BaseModel):
    id: int
    label: str
    alias: str


class Project2(BaseModel):
    id: int
    hubId: str
    ratingKinopoisk: float
    ratingIMDB: float
    genres: List[Union[Genre4, Genre5, Genre6, Genre7]]
    releaseDate: str
    subscriptionType: str
    category: str
    canonicalUrl: str


class Adfox2(BaseModel):
    pixelClick: Any
    pixelImpression: Any


class Slide2(BaseModel):
    id: int
    title: str
    description: str
    link: Any
    project: Project2
    badge: Any
    minAge: int
    campaignName: Any
    adfox: Adfox2
    image: str


class Genre8(BaseModel):
    id: int
    label: str
    alias: str


class Genre9(BaseModel):
    id: int
    label: str
    alias: str


class Project3(BaseModel):
    id: int
    hubId: str
    ratingKinopoisk: Any
    ratingIMDB: Any
    genres: List[Union[Genre8, Genre9]]
    releaseDate: str
    subscriptionType: str
    category: str
    canonicalUrl: str


class Adfox3(BaseModel):
    pixelClick: Any
    pixelImpression: Any


class Slide3(BaseModel):
    id: int
    title: str # Изменил со стринги на инт
    description: str
    link: Any
    project: Project3
    badge: Any
    minAge: int
    campaignName: Any
    adfox: Adfox3
    image: Any


class Data(BaseModel):
    id: int
    isActive: bool
    slides: List[Union[Slide, Slide1, Slide2, Slide3]]


class Model(BaseModel):
    data: Data

